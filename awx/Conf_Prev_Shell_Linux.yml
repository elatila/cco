---
 - name: Configuraciones previas a la ejecuciÃ³n del Script en linux.
   hosts: all
   become: yes
   ignore_errors: True
   tasks:
     - name: Crear un usuario admin con permisos de root
       command: echo 'admin ALL=(ALL) ALL' >> /etc/sudoers
     
     - name: Install AIDE
       yum:
         name: aide
         state: present
     - name: Initialize AIDE database in node
       command: aide -i
     - name: Retrieve AIDE database from node
       fetch: src=/var/lib/aide/{{ansible_nodename}}-aide.new.db.gz dest=/opt/cloudhost/aide-files/ fail_on_missing=yes
     - name: Delete AIDE database from node
       command: rm -f /var/lib/aide/{{ansible_nodename}}-aide.new.db.gz
     - name: Run AIDE database check for configuration integrity
       command: aide 
       register: result
      #playbook won't continue to run if aide check fails, ansible will report fatal error
      #and therefore we ignore this error. We're not interested in the error message only
      #command output. If result is empty it means the integrity check is ok.
   
     - name: AIDE
       lineinfile:
         path: /etc/crontab
         line: '0 5 * * * /usr/sbin/aide â€“check'
         
     - name: Install Grub2
       yum:
         name: grub2-tools
         state: present
     - name: "Grub v2 MBR | Add Password"
       vars:
         grub_password: Youarethetbest2030.
         grub_user: root
       lineinfile: 
         dest: /etc/grub2.cfg 
         regexp: "^password_pbkdf2 {{ grub_user }}" 
         state: present
         insertafter: EOF 
         line: "password_pbkdf2 {{ grub_user }} {{ grub_password }}"
       #when: grub_efi.stat.exists == False 
       
     - name: Incluir a sudoers 
       command: echo 'grid ALL=(root) ALL' >> /etc/sudoers
       command: echo 'psoft ALL=(root) ALL' >> /etc/sudoers 
       
    
       
         
       
